/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.global.struts.action;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.global.dao.BaseDao;
import com.global.dao.EmployeeDao;
import com.global.dao.UserDao;
import com.global.struts.form.UserForm;
import com.global.vo.Deliveryspot;
import com.global.vo.Employee;
import com.global.vo.Power;
import com.global.vo.User;

/** 
 * MyEclipse Struts
 * Creation date: 11-24-2008
 * 
 * XDoclet definition:
 * @struts.action path="/user" name="userForm" input="/userManage/addUser.jsp" scope="request" validate="true"
 */
public class UserAction extends BaseDispatchAction {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	//保存用户信息
	public ActionForward save(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		UserForm userForm = (UserForm) form;// TODO Auto-generated method stub
		UserDao  udao = (UserDao) super.getBean("UserDao");
		BaseDao bdao = (BaseDao) super.getBean("BaseDao");
		EmployeeDao edao = (EmployeeDao) super.getBean("EmployeeDao");
		
		String username = userForm.getUsername().trim();
		String passowrd = userForm.getPassowrd().trim();
		String deliveryspotid = null;
		String deliveryspotid1 = request.getParameter("dsid");
		String deliveryspotid2 = request.getParameter("ds");
		if(deliveryspotid1 != null){
			deliveryspotid = deliveryspotid1;
		}
		else if(deliveryspotid2 != null){
			deliveryspotid = deliveryspotid2;
		}
		String empnumber = request.getParameter("empNO");
       if(udao.checkUsername(username)){
		   String msg = "<font color=red>用户名存在！</font>";
		   request.setAttribute("msg", msg);
		   return mapping.getInputForward();
		}
        else{
		Employee  e = (Employee) bdao.get(Employee.class, new Integer(empnumber));
		
		
		Deliveryspot d = (Deliveryspot) bdao.get(Deliveryspot.class,new Integer(deliveryspotid));
		Power p = (Power) bdao.get(Power.class, new Integer(userForm.getPowerID()));
		User u = new User();
		u.setDeliveryspot(d);
		u.setEmployee(e);
		u.setUsername(username);
		u.setPassowrd(passowrd);
		u.setPower(p);
		
		udao.addUser(u);
		
		 List eList = edao.queryByEmpNOList(u.getEmployee().getEmpno());
		    request.setAttribute("UserList", u);
		    if(eList.size() >0){
				Employee emp = (Employee) eList.get(0);
	            request.setAttribute("EmployeeList", emp);
	            return mapping.findForward("particular");
			}
			else{
				return mapping.findForward("particular");
			}
          }
	}
	//修改用户信息
	public ActionForward update(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		UserForm userForm = (UserForm) form;// TODO Auto-generated method stub
		UserDao  udao = (UserDao) super.getBean("UserDao");
		BaseDao bdao = (BaseDao) super.getBean("BaseDao");
		
		String userid = request.getParameter("userid");
		String username = request.getParameter("username");
		String passowrd = request.getParameter("password");
		
		String powId = request.getParameter("powerID");
		
		Power p = (Power) bdao.get(Power.class, new Integer(powId));
		User u = (User) bdao.get(User.class, new Integer(userid));
		
		u.setUsername(username);
		u.setPassowrd(passowrd);
		u.setPower(p);
		udao.updateUser(u);

        request.setAttribute("user", u);
        request.setAttribute("dsid", ""+u.getDeliveryspot().getDeliveryspotid());
        return list(mapping,form,request,response);
		
	}
	//查询详细用户的详细信息及用户的员工身份的详细信息
	public ActionForward list(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		UserForm userForm = (UserForm) form;// TODO Auto-generated method stub

		int deliveryspotid = 0;
		String deliveryspotid1= request.getParameter("dsid");
		String deliveryspotid2 = (String) request.getAttribute("dsid");
		if(deliveryspotid1 != null) {
			deliveryspotid = new Integer(deliveryspotid1);
		}
		else if(deliveryspotid2 != null){
			
			deliveryspotid = new Integer(deliveryspotid2);
		}
		
		UserDao udao = (UserDao) super.getBean("UserDao");
		String offset = request.getParameter("pager.offset");
	     int intOffset = 0;
	     
	     if(offset != null){
	    	 intOffset = new Integer(offset).intValue();
	     }


		List userList = udao.queryUserByDeliverySpotID2(deliveryspotid,intOffset,12);
		
		int count = udao.countqueryUserByDeliverySpotID2(deliveryspotid);
	
         request.setAttribute("userList", userList);
         request.setAttribute("count", count);
         request.setAttribute("dsid", deliveryspotid);
         return mapping.findForward("selectUser");

	}
	//删除用户信息
	public ActionForward del(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		UserForm userForm = (UserForm) form;// TODO Auto-generated method stub
	    UserDao udao = (UserDao) super.getBean("UserDao");
	    String userid = request.getParameter("userid");
	    String dsid = request.getParameter("dsid");
	    User u = udao.queryUserByUserID(new Integer(userid));
	    udao.deleteUser(u);
	    
	    request.setAttribute("dsid", dsid);
		return list(mapping,form, request,response);
	}
	//修改用户信息
	public ActionForward modification(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		UserForm userForm = (UserForm) form;// TODO Auto-generated method stub
	    UserDao udao = (UserDao) super.getBean("UserDao");
	    String userid = request.getParameter("userid");
	    User u = udao.queryUserByUserID(new Integer(userid));
	    request.setAttribute("userlist", u);
		return mapping.findForward("modification");
	}
	//修改用户信息前显示用户信息
	public ActionForward particular(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		UserForm userForm = (UserForm) form;// TODO Auto-generated method stub
	    UserDao udao = (UserDao) super.getBean("UserDao");
	    EmployeeDao edao = (EmployeeDao) super.getBean("EmployeeDao");
	    String userid = request.getParameter("userid");
	    
	    User user = udao.queryUserByUserID(new Integer(userid));
	  
	    List eList = edao.queryByEmpNOList(user.getEmployee().getEmpno());

	    request.setAttribute("UserList", user);
	    if(eList.size() >0){
			Employee e = (Employee) eList.get(0);
            request.setAttribute("EmployeeList", e);
            return mapping.findForward("particular");
		}
		else{
			return mapping.findForward("particular");
		}
	   
	}
	//验证用户名是否存在
	public ActionForward checkName(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		UserForm userForm = (UserForm) form;// TODO Auto-generated method stub
	    UserDao udao = (UserDao) super.getBean("UserDao");
	    String username = request.getParameter("username").trim();

	    PrintWriter out = null;
		try {
			out = response.getWriter();
		} catch (IOException e) {
			e.printStackTrace();
		}
		if(!username.equals("")){
		 if(username.length()<20 && username.length()>2)
		 {
			if(udao.checkUsername(username)){
				String msg = "<font color=red>用户名存在！</font>";	
				out.print(msg);
			}else{
				String msg = "<font color=green><b>√</b></font>";
				out.print(msg);
			}
		 }
		 else{
			 String msg = "<font color=red><b>×</b></font>";	
			 out.print(msg);
		 }
		}
		else{
			String msg = "<font color=red><b>×</b></font>";	
			out.print(msg);
		}
	      return null;
	}
}