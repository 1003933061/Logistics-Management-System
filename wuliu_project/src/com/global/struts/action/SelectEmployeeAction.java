/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.global.struts.action;



import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.global.dao.BaseDao;
import com.global.dao.EmployeeDao;
import com.global.dao.impl.BaseDaoImpl;
import com.global.dao.impl.EmployeeDaoImpl;
import com.global.struts.form.EmployeeForm;
import com.global.struts.form.SelectEmployeeForm;
import com.global.struts.form.UpdataEmployeeForm;
import com.global.vo.Deliveryspot;
import com.global.vo.Employee;
import com.global.vo.Position;

/** 
 * MyEclipse Struts
 * Creation date: 11-24-2008
 * 
 * XDoclet definition:
 * @struts.action path="/employee" name="employeeForm" input="/empManage/addEmp.jsp" scope="request" validate="true"
 */
public class SelectEmployeeAction extends BaseDispatchAction {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	//从数据库获取配送点列表
	public ActionForward listDeliverySpot(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response){
		SelectEmployeeForm selectEmployeeForm = (SelectEmployeeForm) form;
		EmployeeDao empd = (EmployeeDao) super.getBean("EmployeeDao");
		List deliverySpotList = new ArrayList();
		
		deliverySpotList = empd.listDeliverySpot();
		request.setAttribute("deliverySpotList",deliverySpotList);
		
		return listPosition(mapping,form,request,response);
		
	}	
	//从数据库获取职位列表
	public ActionForward listPosition(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response){
		SelectEmployeeForm selectEmployeeForm = (SelectEmployeeForm) form;
		EmployeeDao empd = (EmployeeDao) super.getBean("EmployeeDao");
		List positionList = new ArrayList();
		
		positionList = empd.listPosition();
		request.setAttribute("positionList",positionList);
		
		return mapping.getInputForward();
	}
	
	//通过员工编号查询员工信息
	public ActionForward queryByEmpNO(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response){
		SelectEmployeeForm SelectEmployeeForm = (SelectEmployeeForm) form;
		
		HttpSession session = request.getSession();
		EmployeeDao empd = (EmployeeDao) super.getBean("EmployeeDao");

		String dsID = null;
		String dsid1 = request.getParameter("dsID");
		String dsid2 = (String) request.getAttribute("dsid");
		if(dsid1 != null){
			dsID = dsid1;
		}
		else if(dsid2 != null){
			dsID = dsid2;
		}
		
		String offset = request.getParameter("pager.offset");
	    int intOffset = 0;
	     
	    if(offset != null){
	    	intOffset = new Integer(offset).intValue();
	     }
	   
	    int count  = empd.countqueryEmployeeByDeliverySpotID2(new Integer(dsID));
		List employeeList = empd.queryEmployeeByDeliverySpotID2(new Integer(dsID), intOffset, 12);
		request.setAttribute("employeeList", employeeList);	
		request.setAttribute("count", count);	
		request.setAttribute("dsID", dsID);	
		return mapping.getInputForward();
	}	
	
	public ActionForward updataEmp(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response){
        SelectEmployeeForm SelectEmployeeForm = (SelectEmployeeForm) form;
		
		HttpSession session = request.getSession();
		EmployeeDao empd = (EmployeeDao) super.getBean("EmployeeDao");

		String empno = request.getParameter("empNO");
		List eList = new ArrayList();
		if(empno != null){
			eList= empd.queryByEmpNO(empno);
		}
		else{
			Employee e = (Employee) session.getAttribute("employeeList");
			eList= empd.queryByEmpNO(e.getEmpno());
		}
		
		if(eList.size()>0){
			Employee e = new Employee();
			e = (Employee) eList.get(0);
			
			List deliverySpotList = new ArrayList();
			
			deliverySpotList = empd.listDeliverySpot();
			request.setAttribute("deliverySpotList",deliverySpotList);
			
			List positionList = new ArrayList();
			
			positionList = empd.listPosition();
			request.setAttribute("positionList",positionList);
			
			request.setAttribute("employeeList", e);	
			return mapping.findForward("updadaEmp");
		}
		else{
			request.setAttribute("employeeList",null);
			return mapping.findForward("updadaEmp");
		}
			
		}
	
	public ActionForward listEmp(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response){
        SelectEmployeeForm SelectEmployeeForm = (SelectEmployeeForm) form;
		
		HttpSession session = request.getSession();
		EmployeeDao empd = (EmployeeDao) super.getBean("EmployeeDao");

		String empno = request.getParameter("empNO");
		List eList = new ArrayList();
		if(empno != null){
			eList= empd.queryByEmpNO(empno);
		}
		
		if(eList.size()>0){
			Employee e = new Employee();
			e = (Employee) eList.get(0);
			System.out.println(e.getEmpno());
			request.setAttribute("employeeList", e);	
			return mapping.findForward("empList");
		}
		else{
			request.setAttribute("employeeList",null);
			return mapping.findForward("empList");
		}
			
	}
	//通过配送点查询员工
	public ActionForward queryEmployeeByDeliverySpotID(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response){
		SelectEmployeeForm SelectEmployeeForm = (SelectEmployeeForm) form;
		HttpSession session = request.getSession();
		Employee e = new Employee();
		List list = new ArrayList();
		Deliveryspot d = new Deliveryspot();
		EmployeeDao empd = (EmployeeDao) super.getBean("EmployeeDao");
		String deliverySpotID = request.getParameter("deliveryspotName");
		list = empd.queryEmployeeByDeliverySpotID(Integer.parseInt(deliverySpotID));
		session.setAttribute("emplList", list);
		
		return mapping.getInputForward();
		
	}	
	//删除员工（把离职员工的flag该为1）
	public ActionForward delEmployee(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response){
		BaseDao bdao = (BaseDao) super.getBean("BaseDao");
		Employee e = new Employee();

		EmployeeDao empd = (EmployeeDao) super.getBean("EmployeeDao");
		String empid = request.getParameter("empID");
		String dsid = request.getParameter("dsid");
		e = (Employee) bdao.get(Employee.class, new Integer(empid));
		e.setFlag(1);
		empd.updateEmployee(e);
		
		request.setAttribute("dsid", dsid);
		return queryByEmpNO(mapping,form,request,response);
		
	}	
	
	
}