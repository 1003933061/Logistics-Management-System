/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.global.struts.action;

import java.io.IOException;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;
import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;

import com.global.dao.BaseDao;
import com.global.dao.CarDao;
import com.global.struts.form.CarForm;
import com.global.vo.Car;
import com.global.vo.Carstate;
import com.global.vo.Cartype;
import com.global.vo.Employee;

/** 
 * MyEclipse Struts
 * Creation date: 11-24-2008
 * 
 * XDoclet definition:
 * @struts.action path="/car" name="carForm" input="/carManage/addCar.jsp" scope="request" validate="true"
 */
public class CarAction extends BaseDispatchAction {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward display(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		CarForm carForm = (CarForm) form;
		
		CarDao cardao = (CarDao) super.getBean("CarDao");
		List driverList = cardao.listAllDriver();
		request.setAttribute("driverList", driverList);
		return mapping.findForward("addCar");
	}
	public ActionForward saveCar(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		CarForm carForm = (CarForm) form;
		
		String carNO = carForm.getCarNO().trim();
		String workNO = carForm.getWorkNO().trim();
		String carTypeID = carForm.getCarTypeID();
		String carSize = carForm.getCarSize().trim();
		String tonnage = carForm.getTonnage().trim();
		String buyTime = request.getParameter("txtDate");

		String empID = request.getParameter("empID");
		String remark = carForm.getRemark();
		
		Cartype carType = new Cartype();
		carType.setCartypeid(new Integer(carTypeID));
		Employee employee = new Employee();
		employee.setEmpid(new Integer(empID));
		
		SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
		Date d = null;
		try {
			d = formatter.parse(buyTime);
		} catch (ParseException e) {
			e.printStackTrace();
		}
		
		Car car = new Car();
		car.setCarno(carNO);
		car.setWorkno(workNO);
		car.setCartype(carType);
		car.setTonnage(new Double(tonnage));
		car.setBuytime(d);
		car.setEmployee(employee);
		car.setRemark(remark);
		car.setCarsize(new Double(carSize));
		
		Carstate state = new Carstate();
		state.setCarstateid(1);
		car.setCarstate(state);
		
		BaseDao dao = (BaseDao) super.getBean("BaseDao");
		CarDao cardao = (CarDao) super.getBean("CarDao");
		
	    dao.save(car);
	    
	    int carID = car.getCarid();
	    Car car1 = cardao.queryCarByCarID(new Integer(carID));
	    request.setAttribute("car", car1);
	    return mapping.findForward("carDetail");
		
	}
	
	public ActionForward searchByCarNO(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		CarForm carForm = (CarForm) form;
		
		CarDao cardao = (CarDao) super.getBean("CarDao");

		String carno = null;
		try {
			carno = new String(request.getParameter("carno").getBytes("ISO-8859-1"),"gbk").trim();
		} catch (UnsupportedEncodingException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		List carList = cardao.queryCarByCarNO(carno);
		if(carList.size()>0){
			request.setAttribute("count", "1");
			request.setAttribute("carList", carList);
			return mapping.findForward("searchCar");
		}else{
			String error = "对不起！没有找到所查的车辆";
			request.setAttribute("error", error);
			return mapping.findForward("searchCar");
		}		
	}
	
	public ActionForward searchByWorkNO(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		CarForm carForm = (CarForm) form;
		
		CarDao cardao = (CarDao) super.getBean("CarDao");
		
		String workno = null;
		try {
			workno = new String(request.getParameter("workno").getBytes("ISO-8859-1"),"gbk").trim();
		} catch (UnsupportedEncodingException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		List carList = cardao.queryCarByWorkNO(workno);
		if(carList.size()>0){
			request.setAttribute("count", "1");
			request.setAttribute("carList", carList);
			return mapping.findForward("searchCar");
		}else{
			String error = "对不起！没有找到所查的车辆";
			request.setAttribute("error", error);
			return mapping.findForward("searchCar");
		}
	}
	
	public ActionForward searchByCarState(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		CarForm carForm = (CarForm) form;
		
		CarDao cardao = (CarDao) super.getBean("CarDao");
		
		String state = null;
		String state1 = request.getParameter("state");
		String state2 = (String) request.getAttribute("state");
		if(state1 != null){
			state = state1;	
		}
		else if(state2 != null){
			state = state2;
		}
		
		String offset = request.getParameter("pager.offset");
	     int intOffset = 0;
	     
	     if(offset != null){
	    	 intOffset = new Integer(offset).intValue();
	     }

		List carList = cardao.queryCarByCarStateID2(new Integer(state),intOffset,7);
		if(carList.size()>0){
			request.setAttribute("carList", carList);
			int count = cardao.countqueryCarByCarStateID2(new Integer(state));
			
			request.setAttribute("count", count);
			request.setAttribute("state", state);
			return mapping.findForward("searchCar");
		}else{
			String error = "对不起！没有找到所查的车辆";
			request.setAttribute("error", error);
			return mapping.findForward("searchCar");
		}
		
	}
	
	
	
	
	/*public ActionForward searchCar(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		CarForm carForm = (CarForm) form;
		
		String way = request.getParameter("way");
		String state = request.getParameter("state");
		String number = request.getParameter("number");
		
		Car car = new Car();
		ApplicationContext ac = new ClassPathXmlApplicationContext("applicationContext.xml");
		CarDao cardao = (CarDao) ac.getBean("CarDao");
		HttpSession session = request.getSession();
		session.setAttribute("number", number);
		
		System.out.println(state);
		if(way.equals("1")){
		   List carList = cardao.queryCarByCarNO(number);
		   try {
			car = (Car) carList.get(0);
		} catch (Exception e) {
			request.getRequestDispatcher("/carManage/error.jsp");
		}
		   request.setAttribute("car", car); 
		   return mapping.findForward("searchCar");
		}else if(way.equals("2")){
		    List carList = cardao.queryCarByWorkNO(number);
		    try {
				car = (Car) carList.get(0);
			} catch (Exception e) {
				request.getRequestDispatcher("/carManage/error.jsp");
			}
			request.setAttribute("car", car);
			return mapping.findForward("searchCar");
		}else if(state.equals("1")){
			 List carList = cardao.queryCarByCarStateID(4);
			 request.setAttribute("carList", carList);
			 session.setAttribute("flag", state);
			 return mapping.findForward("searchCar2");
		}else if(state.equals("2")){
			List carList = cardao.queryCarByCarStateID(2);
			 request.setAttribute("carList", carList);
			 session.setAttribute("flag", state);
			 return mapping.findForward("searchCar2");
		}else if(state.equals("3")){
			List carList = cardao.queryCarByCarStateID(3);
			request.setAttribute("carList", carList);
		    session.setAttribute("flag", state);
			return mapping.findForward("searchCar2");
		}
		return null;
	}*/
/*	public ActionForward del(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		CarForm carForm = (CarForm) form;
		
		String[] carIDs = request.getParameterValues("carIDs");
		CarDao cardao = (CarDao) super.getBean("CarDao");
		String carID = carIDs[0];

		Car car = cardao.queryCarByCarID(new Integer(carID));
	    cardao.deleteCar(car);
	    
		return mapping.findForward("search");
 }*/
	
	public ActionForward dels(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		CarForm carForm = (CarForm) form;
		
		String[] carIDs = request.getParameterValues("carIDs");
		
		String state = request.getParameter("state");
		
		CarDao cardao = (CarDao) super.getBean("CarDao");
		for (int i = 0; i < carIDs.length; i++) {
			String carID = carIDs[i];
		    Car car = cardao.queryCarByCarID(new Integer(carID));
		    cardao.deleteCar(car);
		}
		
		if(state != null){
			request.setAttribute("state", state);
			return searchByCarState( mapping,form,request,response);
		}
		else{
			return mapping.findForward("search");
		}
		
		/*HttpSession session = request.getSession();
		String flag = (String) session.getAttribute("flag");
		if(flag.equals("1")){
			 List carList = cardao.queryCarByCarStateID(4);
			 request.setAttribute("carList", carList);
			 return mapping.findForward("searchCar2");
		}else if(flag.equals("2")){
			List carList = cardao.queryCarByCarStateID(2);
			 request.setAttribute("carList", carList);
			 return mapping.findForward("searchCar2");
		}else if(flag.equals("3")){
			List carList = cardao.queryCarByCarStateID(3);
			request.setAttribute("carList", carList);
			return mapping.findForward("searchCar2");
		}*/
	}
	
	public ActionForward listAllCarNO(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		CarForm carForm = (CarForm) form;
		HttpSession session = request.getSession();
		
		CarDao cardao = (CarDao) super.getBean("CarDao");
		List carlist = cardao.queryAllCar();
		session.setAttribute("carlist", carlist);
		return mapping.findForward("controlCar");
		
	
	}
	
	public ActionForward changeState(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		CarForm carForm = (CarForm) form;
		
		CarDao cardao = (CarDao) super.getBean("CarDao");
		
	   
		String carID = request.getParameter("carNO");
		String state = request.getParameter("state");
		
		cardao.update(new Integer(carID),new Integer(state));
		
		Car car = cardao.queryCarByCarID(new Integer(carID));
		
		 request.setAttribute("car", car);
		 return mapping.findForward("carDetail");
		
	
	}
	
	public ActionForward carDetail(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		CarForm carForm = (CarForm) form;
		
		CarDao cardao = (CarDao) super.getBean("CarDao");
		
	   String carID = request.getParameter("carid");
	   Car car = cardao.queryCarByCarID(new Integer(carID));
	   request.setAttribute("car", car);
	   return mapping.findForward("carDetail");
		
	
	}
	
	public ActionForward update(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		CarForm carForm = (CarForm) form;
		
		CarDao cardao = (CarDao) super.getBean("CarDao");
		String carID = request.getParameter("carid");
		
		HttpSession session = request.getSession();
		session.setAttribute("carID", carID);
		
		Car car = cardao.queryCarByCarID(new Integer(carID));
		
		String carNO = car.getCarno();
		String workNO = car.getWorkno();
		
		Double carSize = car.getCarsize();
		Double tonnage = car.getTonnage();
		
		String remark = car.getRemark();
		Integer empID = car.getEmployee().getEmpid();
		Integer carTypeID = car.getCartype().getCartypeid();
		
		carForm.setCarNO(carNO);
		carForm.setWorkNO(workNO);
		carForm.setTonnage((tonnage).toString());
		carForm.setCarSize((carSize).toString());
		carForm.setEmpID((empID).toString());
		carForm.setRemark(remark);
		carForm.setCarTypeID((carTypeID).toString());
		
		List driverList = cardao.listAllDriver();
		request.setAttribute("driverList", driverList);
		
		return mapping.findForward("addCar2");
	}
	
	public ActionForward updateCarMessage(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		CarForm carForm = (CarForm) form;
		
		HttpSession session = request.getSession();
		String carID = (String) session.getAttribute("carID");
		
		CarDao cardao = (CarDao) super.getBean("CarDao");
		Car car = cardao.queryCarByCarID(new Integer(carID));
		
		String carNO = carForm.getCarNO().trim();
		String workNO = carForm.getWorkNO().trim();
		String carTypeID = carForm.getCarTypeID();
		String carSize = request.getParameter("carTypeID");
		String tonnage = carForm.getTonnage();

		String empID = request.getParameter("empID");
		String remark = carForm.getRemark();
		
		Cartype carType = new Cartype();
		carType.setCartypeid(new Integer(carTypeID));
		Employee employee = new Employee();
		employee.setEmpid(new Integer(empID));
		
		car.setCarno(carNO);
		car.setWorkno(workNO);
		car.setCartype(carType);
		car.setTonnage(new Double(tonnage));
		car.setEmployee(employee);
		car.setRemark(remark);
		car.setCarsize(new Double(carSize));
		
		BaseDao dao = (BaseDao) super.getBean("BaseDao");
		dao.update(car);
		request.setAttribute("state", ""+car.getCarstate().getCarstateid());
		return searchByCarState( mapping,form,request,response);
		
	
	}
	public ActionForward checkCarNO(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		CarForm carForm = (CarForm) form;
		
		String carNO = request.getParameter("carNO").trim();
		CarDao cardao = (CarDao) super.getBean("CarDao");
		PrintWriter out = null;
		try {
			out = response.getWriter();
		} catch (IOException e) {
			e.printStackTrace();
		}
	 if(!carNO.equals("")){
	    if(carNO.length()<20 && carNO.length()>0)
	    {
		    if(!cardao.checkCarNO(carNO)){
			String msg = "<font color=red>车牌号已重复!</font>";	
			out.print(msg);
		 }
		else{
			 String msg = "<font color=green><b>√</b></font>";
			out.print(msg);
		 }
	  }
	  else{
		String msg = "<font color=red><b>×</b></font>";
		out.print(msg);
	  } 
		}
		else{
			 String msg = "<font color=red><b>×</b></font>";
			out.print(msg);
		}
	   return null;
		
	
	}
	public ActionForward checkWorkNO(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		CarForm carForm = (CarForm) form;
		
		String workNO = request.getParameter("workNO").trim();
		CarDao cardao = (CarDao) super.getBean("CarDao");
		PrintWriter out = null;
		try {
			out = response.getWriter();
		} catch (IOException e) {
			e.printStackTrace();
		}
	if(!workNO.equals(""))
	{
		 if(workNO.length()<20 && workNO.length()>0)
		 {
		if(!cardao.checkWorkNO(workNO)){
			String msg = "<font color=red>运营证号已重复!</font>";
			out.print(msg);
		}
		else{
			 String msg = "<font color=green><b>√</b></font>";
			 out.print(msg);
		}
		
		 }
		 else{
			 String msg = "<font color=red><b>×</b></font>";
			 out.print(msg);
		 }
		 }
	else{
		String msg = "<font color=red><b>×</b></font>";
		out.print(msg);
	 }
	   return null;
		
	
	}
	
}
