/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.global.struts.action;

import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.global.bean.OrderState;
import com.global.dao.CompanyDao;
import com.global.struts.form.CompanyForm;
import com.global.vo.Deliveryspot;
import com.global.vo.Order;
import com.global.vo.Receipt;
import com.global.vo.Receiptdetaile;

/** 
 * MyEclipse Struts
 * Creation date: 11-24-2008
 * 
 * XDoclet definition:
 * @struts.action path="/company" name="companyForm" input="/global/company.jsp" scope="request" validate="true"
 */
public class CompanyAction extends BaseDispatchAction {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward initAllDeliverySpot(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		CompanyDao cdao = (CompanyDao) super.getBean("CompanyDao");
	    List provinceList = cdao.queryAllProvinceFromDeliverySpot();
	    HttpSession session = request.getSession();
	    session.setAttribute("provinceList", provinceList);
		return mapping.findForward("wuliu");
	}
	
	public ActionForward queryOrderSatateByOrderNO(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		CompanyForm companyForm = (CompanyForm) form;
		String orderNO = request.getParameter("orderNO").trim();
		CompanyDao cdao = (CompanyDao) super.getBean("CompanyDao");
		Order order = cdao.queryOrderByOrderNO(orderNO);
		
		if(order != null){
			List receiptdetaileList = cdao.queryOrderSatateByOrderNO(order.getOrderid());
			List orderStateList = new ArrayList();
			for (int i = 0; i < receiptdetaileList.size(); i++) {
				Receiptdetaile rd = (Receiptdetaile) receiptdetaileList.get(i);
				Receipt receipt = rd.getReceipt();
				OrderState os = new OrderState();

				os.setCreatetime(receipt.getCreatetime());
				os.setDeliveryspotName(receipt.getDeliveryspot().getName());
				os.setDeliveryspotid(receipt.getDeliveryspot().getDeliveryspotid());
				os.setFlag(receipt.getRtype());
				
				orderStateList.add(os);
			}
			
	       if(orderStateList.size()>0){
			
			request.setAttribute("orderStateList", orderStateList);
			request.setAttribute("orderNO", orderNO);
			request.setAttribute("order", order);
			return mapping.findForward("orderState");
	    }
	       else{
	    	request.setAttribute("ErrorMsg", "您所查找的订单未发货...");
			return mapping.findForward("orderState");
	       }
		}else{
			request.setAttribute("ErrorMsg", "您所查找的订单不存在...");
			return mapping.findForward("orderState");
		}
		
		
	}
	
	public ActionForward queryAllPriceFromDeliverySpot(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		CompanyDao cdao = (CompanyDao) super.getBean("CompanyDao");
		String offset = request.getParameter("pager.offset");
	     int intOffset = 0;
	     
	     if(offset != null){
	    	 intOffset = new Integer(offset).intValue();
	     }
		
	    int count  = cdao.queryAllPriceFromDeliverySpot();
	    List priceList = cdao.queryAllPriceFromDeliverySpot(intOffset,10);
	    request.setAttribute("count", count);
	    request.setAttribute("priceList", priceList);
		return mapping.findForward("price");
	}
	public ActionForward queryAllDeliverySpotByProvinceIDFromDeliverySpot(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		CompanyDao cdao = (CompanyDao) super.getBean("CompanyDao");
		String provinceID = request.getParameter("provinceID");

	    List dsList = cdao.queryAllDeliverySpotByProvinceIDFromDeliverySpot(new Integer(provinceID));
	 
	    request.setAttribute("dsList", dsList);
		return mapping.findForward("websit");
	}
	
	public ActionForward queryDeliverySpotByDeliverySpotID(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		CompanyDao cdao = (CompanyDao) super.getBean("CompanyDao");
		String deliverySpotID = request.getParameter("deliverySpotID");

		Deliveryspot deliveryspot = cdao.queryDeliverySpotByDeliverySpotID( new Integer(deliverySpotID));
	 
	    request.setAttribute("deliveryspot", deliveryspot);
		return mapping.findForward("websitinfo");
	}
	
	public ActionForward queryDeliverySpotByProvinceIDAndCityID(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		CompanyDao cdao = (CompanyDao) super.getBean("CompanyDao");
		String provinceID = request.getParameter("r");
		String cityID = request.getParameter("c");

		List dsList = cdao.queryDeliverySpotByProvinceIDAndCityID(new Integer(provinceID),new Integer(cityID));
		
		if(dsList.size()>0){
		   Deliveryspot deliveryspot = new Deliveryspot();
		   deliveryspot = (Deliveryspot) dsList.get(0);
		   request.setAttribute("deliveryspot", deliveryspot);
		   return mapping.findForward("searchWebSit");
		}
		else{
		 request.setAttribute("msg", "<font color=red>无此网点的信息...</font>");
	     return mapping.findForward("searchWebSit");
		}
	    
	}
	
}